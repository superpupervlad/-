<templateSet group="C/C++">
  <template name="class" value="class $NAME$ {&#10;    public:&#10;        $COPY_NAME$($FIELDS$){&#10;            $END$&#10;        }&#10;}" description="class with  constructor" toReformat="false" toShortenFQNames="true">
    <variable name="NAME" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="COPY_NAME" expression="NAME" defaultValue="" alwaysStopAt="false" />
    <variable name="FIELDS" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="cpp" value="true" />
    </context>
  </template>
  <template name="import" value="#include &lt;iostream&gt;&#10;#include &lt;vector&gt;&#10;#include &lt;string&gt;&#10;#include &lt;iterator&gt;&#10;#include &lt;stdexcept&gt;&#10;#include &lt;algorithm&gt;" description="include most frequently used libraries" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="cpp" value="true" />
    </context>
  </template>
  <template name="ct" value="std::cout &lt;&lt; $VALUE$;" description="cout with std" toReformat="false" toShortenFQNames="true">
    <variable name="VALUE" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="cpp" value="true" />
    </context>
  </template>
  <template name="f" value="for (int $INDEX$ = 0; $COPY_INDEX$ &lt; $N$; ++$COPY_INDEX$) {&#10;  $END$&#10;}" description="for loop" toReformat="false" toShortenFQNames="true">
    <variable name="INDEX" expression="i" defaultValue="" alwaysStopAt="true" />
    <variable name="COPY_INDEX" expression="INDEX" defaultValue="" alwaysStopAt="false" />
    <variable name="N" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="cpp" value="true" />
    </context>
  </template>
  <template name="ter" value="$CONDITION$ ? $TRUE$ : $FALSE$;" description="ternary operator" toReformat="false" toShortenFQNames="true">
    <variable name="CONDITION" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="TRUE" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="FALSE" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="cpp" value="true" />
    </context>
  </template>
</templateSet>
